<!--
  ~ Copyright 2011 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="vert.x" default="jar-core" basedir=".">

    <description>
        Build script for vert.x
    </description>

    <!-- set global properties for this build -->
    <property name="target" value="target"/>
    <property name="jar-file" value="vert.x.jar"/>
    <property name="version-number" value="0.1"/>
    <property name="dist-build-base" value="${target}/dist-build"/>
    <property name="dist-build" value="${dist-build-base}/vert.x-${version-number}"/>
    <property name="core-src" value="src/main/java"/>
    <property name="core-target" value="${target}/core/classes"/>

    <property name="resources-dir" value="src/main/resources"/>
    <property name="core-lib" value="${resources-dir}/jars"/>

    <property name="test-lib" value="src/tests/resources/jars"/>
    <property name="tests-target" value="${target}/tests/classes"/>
    <property name="tests-src" value="src/tests"/>

    <property name="javadoc-dir" value="docs/java/api"/>
    <property name="rubydoc-dir" value="docs/ruby/api"/>

    <path id="core-lib-classpath">
        <fileset dir="${core-lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test-classpath">
        <path refid="core-lib-classpath"/>
        <fileset dir="${test-lib}">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${tests-target}"/>
        <pathelement location="target/vert.x.jar"/>
    </path>

    <taskdef name="testng" classpathref="test-classpath"
             classname="org.testng.TestNGAntTask"/>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
    </target>

    <target name="compile-core" depends="init" description="compile the source for the core">
        <mkdir dir="${core-target}"/>
        <javac srcdir="${core-src}" destdir="${core-target}" classpathref="core-lib-classpath" debug="on" includeantruntime="false" target="1.7" source="1.7"/>
    </target>

    <target name="jar-core" depends="compile-core" description="generate the core jar">
        <jar jarfile="${target}/${jar-file}" basedir="${core-target}" includes="**/*.class"/>
    </target>

    <target name="clean" description="clean up">
        <delete dir="${target}"/>
    </target>

    <target name="compile-tests" depends="jar-core">
        <mkdir dir="${tests-target}"/>
        <javac srcdir="${tests-src}" destdir="${tests-target}" classpathref="test-classpath" debug="on" includeantruntime="false"/>
    </target>

    <target name="tests" depends="java-tests, ruby-tests">
    </target>

    <target name="java-tests" depends="compile-tests">
        <testng classpathref="test-classpath">
            <!-- <testng classpathref="test-classpath" methods="org.vertx.tests.core.net.NetTest.*"> -->
            <sysproperty key="java.util.logging.config.file" value="${resources-dir}/logging.properties"/>
            <classfileset dir="${tests-target}" includes="**/*Test.class" excludes="**/redis/*.class"/>
            <!-- <classfileset dir="${tests-target}" includes="**/RedisReconnectTest.class"/> -->
        </testng>
    </target>

    <target name="redis-tests" depends="compile-tests">
        <!-- Make sure you have a local redis server running before you run this -->
        <testng classpathref="test-classpath">
            <classfileset dir="${tests-target}" includes="**/RedisTest.class"/>
        </testng>
    </target>

    <target name="ruby-tests" depends="compile-tests">
        <exec executable="./run_tests.sh" dir="./src/tests/ruby" failonerror="true"/>
    </target>

    <target name="javadoc" depends="compile-core">
        <javadoc destdir="${target}/${javadoc-dir}" author="true" version="false" use="true" windowtitle="vert.x Java API"
                classpathref="core-lib-classpath" Public="true" sourcepath="${core-src}" packagenames="org.vertx.java.core.*"
                excludepackagenames="org.vertx.java.core.internal">
            <!-- <fileset dir="${core-src}" defaultexcludes="yes">
                <include name="org/vertx/java/core/**"/>
            </fileset>
            -->
            <doctitle><![CDATA[<h1>vert.x Java API</h1>]]></doctitle>
        </javadoc>
    </target>

    <!--
    Needs:
    jruby -S gem install yard
    jruby -S gem install rdiscount
    -->
    <target name="yardoc">
        <exec executable="yardoc"/>
    </target>

    <target name="dist" depends="clean, jar-core, javadoc, yardoc">
        <mkdir dir="${dist-build}"/>

        <copy file="${target}/${jar-file}" todir="${dist-build}/lib/java"/>

        <copy file="${resources-dir}/logging.properties" todir="${dist-build}"/>

        <copy todir="${dist-build}/lib/java">
            <fileset dir="${core-lib}">
                <include name="netty.jar"/>
                <include name="high-scale-lib.jar"/>
            </fileset>
        </copy>

        <copy todir="${dist-build}/lib/ruby">
            <fileset dir="src/main/ruby">
                <include name="**/*.rb"/>
            </fileset>
        </copy>

        <copy todir="${dist-build}/lib/groovy">
            <fileset dir="src/main/groovy">
                <include name="**/*.groovy"/>
            </fileset>
        </copy>

        <copy todir="${dist-build}/${javadoc-dir}">
            <fileset dir="${target}/${javadoc-dir}"/>
        </copy>

        <copy todir="${dist-build}/${rubydoc-dir}">
            <fileset dir="${target}/${rubydoc-dir}"/>
        </copy>

        <!-- We need to use exec since the ant copy task does not preserve file permissions -->
        <mkdir dir="${dist-build}/bin"/>

        <exec executable="cp">
            <arg value="src/scripts/vertx-java"/>
            <arg value="${dist-build}/bin/vertx-java"/>
        </exec>
        <exec executable="cp">
            <arg value="src/scripts/vertx-ruby"/>
            <arg value="${dist-build}/bin/vertx-ruby"/>
        </exec>

        <copy todir="${dist-build}/examples">
            <fileset dir="src/examples"/>
        </copy>

        <copy file="LICENSE.txt" todir="${dist-build}"/>
        <copy file="README.md" todir="${dist-build}"/>

        <copy todir="${dist-build}">
            <fileset dir="rel-notes">
                <include name="release-notes-${version-number}.txt"/>
            </fileset>
        </copy>

        <!-- Don't create the zip since file permissions are not preserved - use tar.gz instead
        <zip destfile="${target}/vert.x-${version-number}.zip" basedir="${dist-build-base}"/> -->

        <tar destfile="${target}/vert.x-${version-number}.tar" longfile="gnu">
          <tarfileset dir="${dist-build-base}" filemode="755">
            <include name="**/bin/**"/>
          </tarfileset>
          <tarfileset dir="${dist-build-base}">
            <exclude name="**/bin/**"/>
          </tarfileset>
        </tar>

        <gzip destfile="${target}/vert.x-${version-number}.tar.gz" src="${target}/vert.x-${version-number}.tar"/>
    </target>

</project>
