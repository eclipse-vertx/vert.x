<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2011-2019 Contributors to the Eclipse Foundation
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Eclipse Public License 2.0 which is available at
  ~
  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
  ~
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.vertx</groupId>
    <artifactId>vertx-core-aggregator</artifactId>
    <version>5.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>vertx-core</artifactId>
  <version>5.0.0-SNAPSHOT</version>

  <name>Vert.x Core</name>

  <properties>
    <apacheds-protocol-dns.version>2.0.0.AM27</apacheds-protocol-dns.version>
    <generated.dir>${project.basedir}/src/main/generated</generated.dir>
    <jmh.version>1.37</jmh.version>
    <vertx.surefire.nettyTransport>jdk</vertx.surefire.nettyTransport>
    <vertx.surefire.useDomainSockets>false</vertx.surefire.useDomainSockets>
  </properties>

  <dependencies>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core-logging</artifactId>
      <version>5.0.0-SNAPSHOT</version>
    </dependency>

    <!-- We depend on the specific Netty dependencies not netty-all to reduce the size of fatjars -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-common</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler-proxy</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-http</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-http2</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-resolver</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-resolver-dns</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-haproxy</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-classes-epoll</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-classes-io_uring</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-classes-kqueue</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Loggers -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Generators -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen-api</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen-json</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-docgen-api</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${harmcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-protocol-dns</artifactId>
      <version>${apacheds-protocol-dns.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.aayushatharva.brotli4j</groupId>
      <artifactId>brotli4j</artifactId>
      <version>1.16.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.luben</groupId>
      <artifactId>zstd-jni</artifactId>
      <version>1.5.6-5</version>
      <scope>test</scope>
    </dependency>

    <!-- JMH -->
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <version>${jmh.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <executions>
            <execution>
              <id>default-compile</id>
              <configuration>
                <annotationProcessorPaths>
                  <annotationProcessorPath>
                    <groupId>io.vertx</groupId>
                    <artifactId>vertx-codegen</artifactId>
                    <classifier>processor</classifier>
                  </annotationProcessorPath>
                  <annotationProcessorPath>
                    <groupId>io.vertx</groupId>
                    <artifactId>vertx-docgen-processor</artifactId>
                    <classifier>processor</classifier>
                  </annotationProcessorPath>
                </annotationProcessorPaths>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
            <additionalClasspathElements>
              <!-- Can we remove this one ??? -->
              <additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
              <additionalClasspathElement>${project.basedir}/src/test/classpath/jul</additionalClasspathElement>
              <additionalClasspathElement>${project.basedir}/src/test/classpath/sourceverticle</additionalClasspathElement>
            </additionalClasspathElements>
            <systemPropertyVariables>
              <!-- Uncomment to debug SSL -->
              <!--
              <javax.net.debug>ssl</javax.net.debug>
              -->
              <!-- Uncomment to run with leak detection -->
              <!--
              <io.netty.leakDetection.level>PARANOID</io.netty.leakDetection.level>
              -->
              <buildDirectory>${project.build.directory}</buildDirectory>
              <vertx.version>${project.version}</vertx.version>
              <vertx.handle100Continue>true</vertx.handle100Continue>
              <vertx.transport>${vertx.surefire.nettyTransport}</vertx.transport>
              <vertx.useDomainSockets>${vertx.surefire.useDomainSockets}</vertx.useDomainSockets>
              <vertx.threadChecks>true</vertx.threadChecks>
            </systemPropertyVariables>
            <!-- Needs to be small enough to run in a EC2 1.7GB small instance -->
            <!-- IMPORTANT: when modifying this line, don't forge to modify the same line in the`coverage` profile -->
            <argLine>-Xmx1200M</argLine>
            <forkCount>1</forkCount>
            <reuseForks>true</reuseForks>
            <excludes>
              <exclude>io/vertx/it/**</exclude>
            </excludes>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
    <plugins>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>test-service-helper</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <useModulePath>false</useModulePath>
              <generatedTestSourcesDirectory>${project.build.directory}/generated-test-sources/servicehelper-annotations</generatedTestSourcesDirectory>
              <compileSourceRoots>
                <compileSourceRoot>${project.basedir}/src/test/classpath/servicehelper</compileSourceRoot>
              </compileSourceRoots>
              <outputDirectory>${project.build.directory}/servicehelper-classes</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-service-helper</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/servicehelper-classes</outputDirectory>
              <resources>
                <resource>
                  <directory>src/test/classpath/servicehelper</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Tests that require to run with different JVM settings -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <useModulePath>false</useModulePath>
        </configuration>
        <executions>
          <execution>
            <id>ssl-engine:default</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/tls/SSLEngineTest.java</include>
              </includes>
              <systemProperties>
                <vertx-test-alpn-openssl>false</vertx-test-alpn-openssl>
              </systemProperties>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>io.netty:netty-tcnative-boringssl-static</classpathDependencyExclude>
              </classpathDependencyExcludes>
            </configuration>
          </execution>
          <execution>
            <id>ssl-engine:openssl</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/tls/SSLEngineTest.java</include>
              </includes>
              <systemProperties>
                <vertx-test-alpn-openssl>true</vertx-test-alpn-openssl>
              </systemProperties>
            </configuration>
          </execution>
          <execution>
            <id>no-native</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/transport/TransportTest.java</include>
              </includes>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>io.netty:netty-transport-classes-io_uring</classpathDependencyExclude>
                <classpathDependencyExclude>io.netty:netty-transport-classes-epoll</classpathDependencyExclude>
                <classpathDependencyExclude>io.netty:netty-transport-classes-kqueue</classpathDependencyExclude>
              </classpathDependencyExcludes>
            </configuration>
          </execution>
          <execution>
            <id>io_uring</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/transport/IoUringTest.java</include>
              </includes>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>io.netty:netty-transport-classes-epoll</classpathDependencyExclude>
              </classpathDependencyExcludes>
            </configuration>
          </execution>
          <execution>
            <id>connect-to-tls-trusted-server</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/tls/ConnectToTLSTrustedServerTest.java</include>
              </includes>
              <systemProperties>
                <javax.net.ssl.trustStore>${project.basedir}/src/test/resources/tls/client-truststore-root-ca.jks</javax.net.ssl.trustStore>
                <javax.net.ssl.trustStorePassword>wibble</javax.net.ssl.trustStorePassword>
              </systemProperties>
            </configuration>
          </execution>
          <execution>
            <id>no-jackson</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/json/NoJacksonTest.java</include>
              </includes>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>com.fasterxml.jackson.core:jackson-core</classpathDependencyExclude>
                <classpathDependencyExclude>com.fasterxml.jackson.core:jackson-databind</classpathDependencyExclude>
              </classpathDependencyExcludes>
            </configuration>
          </execution>
          <execution>
            <id>no-haproxy-codec</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/net/HAProxyTest.java</include>
              </includes>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>io.netty:netty-codec-haproxy</classpathDependencyExclude>
              </classpathDependencyExcludes>
            </configuration>
          </execution>
          <execution>
            <id>no-jackson-databind</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/json/NoDatabindTest.java</include>
              </includes>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>com.fasterxml.jackson.core:jackson-databind</classpathDependencyExclude>
              </classpathDependencyExcludes>
            </configuration>
          </execution>
          <execution>
            <id>custom-json-factory</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/json/CustomJsonFactoryTest.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/customjsonfactory</additionalClasspathElement>
              </additionalClasspathElements>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>com.fasterxml.jackson.core:jackson-core</classpathDependencyExclude>
                <classpathDependencyExclude>com.fasterxml.jackson.core:jackson-databind</classpathDependencyExclude>
              </classpathDependencyExcludes>
            </configuration>
          </execution>
          <execution>
            <id>json-factory-ordering</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/json/JsonFactoryOrdering.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/jsonfactoryordering</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
          <execution>
            <id>metrics-service-loader</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/metrics/ServiceLoadedTest.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/metrics</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
          <execution>
            <id>custom-vertx-thread-factory</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/vertx/VertxThreadFactoryTest.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/customthreadfactory</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
          <execution>
            <id>custom-executor-service-factory</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/vertx/ExecutorServiceFactoryTest.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/customexecutorservicefactory</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
          <execution>
            <id>custom-event-executor</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/eventexecutor/CustomEventExecutorTest.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/customeventexecutor</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
          <execution>
            <id>custom-vertx-tracer-factory</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/tracing/VertxTracerFactoryTest.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/tracerfactory</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
          <execution>
            <id>custom-file-resolver-factory</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/file/FileResolverFactoryTest.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/customfileresolver</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
          <execution>
            <id>custom-context-local</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/context/CustomContextLocalTest.java</include>
              </includes>
              <additionalClasspathElements>
                <additionalClasspathElement>${project.basedir}/src/test/classpath/customcontextlocal</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </execution>
          <execution>
            <id>service-helper</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/servicehelper/ServiceHelperTest.java</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>adaptive-allocator</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/buffer/TcpAllocationTest.java</include>
              </includes>
              <systemProperties>
                <io.netty.allocator.type>adaptive</io.netty.allocator.type>
              </systemProperties>
            </configuration>
          </execution>
          <execution>
            <id>pooled-allocator</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/buffer/TcpAllocationTest.java</include>
              </includes>
              <systemProperties>
                <io.netty.allocator.type>pooled</io.netty.allocator.type>
              </systemProperties>
            </configuration>
          </execution>
          <execution>
            <id>unpooled-allocator</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>io/vertx/it/buffer/TcpAllocationTest.java</include>
              </includes>
              <systemProperties>
                <io.netty.allocator.type>unpooled</io.netty.allocator.type>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>native-image-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>package-docs</id>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/vertx-version.txt</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/vertx-version.txt</exclude>
        </excludes>
      </resource>
    </resources>
  </build>

  <profiles>

    <profile>
      <id>NativeEpoll</id>
      <properties>
        <vertx.surefire.nettyTransport>epoll</vertx.surefire.nettyTransport>
        <vertx.surefire.useDomainSockets>false</vertx.surefire.useDomainSockets>
        <vertx.surefire.useModulePath>false</vertx.surefire.useModulePath>
      </properties>
    </profile>

    <profile>
      <id>NativeIoUring</id>
      <properties>
        <vertx.surefire.nettyTransport>io_uring</vertx.surefire.nettyTransport>
        <vertx.surefire.useDomainSockets>false</vertx.surefire.useDomainSockets>
        <vertx.surefire.useModulePath>false</vertx.surefire.useModulePath>
      </properties>
    </profile>

    <profile>
      <id>NativeEpoll+DomainSockets</id>
      <properties>
        <vertx.surefire.nettyTransport>epoll</vertx.surefire.nettyTransport>
        <vertx.surefire.useDomainSockets>true</vertx.surefire.useDomainSockets>
        <vertx.surefire.useModulePath>false</vertx.surefire.useModulePath>
      </properties>
    </profile>

    <profile>
      <id>NativeKQueue</id>
      <properties>
        <vertx.surefire.nettyTransport>kqueue</vertx.surefire.nettyTransport>
        <vertx.surefire.useDomainSockets>false</vertx.surefire.useDomainSockets>
        <vertx.surefire.useModulePath>false</vertx.surefire.useModulePath>
      </properties>
    </profile>

    <profile>
      <id>NativeKQueue+DomainSockets</id>
      <properties>
        <vertx.surefire.nettyTransport>kqueue</vertx.surefire.nettyTransport>
        <vertx.surefire.useDomainSockets>true</vertx.surefire.useDomainSockets>
        <vertx.surefire.useModulePath>false</vertx.surefire.useModulePath>
      </properties>
    </profile>

    <profile>
      <id>benchmarks</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-compiler-plugin</artifactId>
              <executions>
                <execution>
                  <id>default-testCompile</id>
                  <configuration>
                    <annotationProcessorPaths>
                      <annotationProcessorPath>
                        <groupId>org.openjdk.jmh</groupId>
                        <artifactId>jmh-generator-annprocess</artifactId>
                        <version>${jmh.version}</version>
                      </annotationProcessorPath>
                    </annotationProcessorPaths>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>assemble-benchmarks</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <archive>
                    <manifest>
                      <mainClass>org.openjdk.jmh.Main</mainClass>
                    </manifest>
                  </archive>
                  <inlineDescriptors>
                    <inlineDescriptor>
                      <id>benchmarks</id>
                      <formats>
                        <format>jar</format>
                      </formats>
                      <includeBaseDirectory>false</includeBaseDirectory>
                      <fileSets>
                        <fileSet>
                          <directory>${project.build.testOutputDirectory}</directory>
                          <includes>
                            <include>io/vertx/benchmarks/**</include>
                            <include>META-INF/</include>
                          </includes>
                          <outputDirectory>/</outputDirectory>
                        </fileSet>
                      </fileSets>
                      <dependencySets>
                        <dependencySet>
                          <outputDirectory>/</outputDirectory>
                          <unpack>true</unpack>
                          <scope>test</scope>
                        </dependencySet>
                      </dependencySets>
                    </inlineDescriptor>
                  </inlineDescriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>linux-x86_64</id>
      <activation>
        <os>
          <family>linux</family>
          <arch>x86_64</arch>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-epoll</artifactId>
          <classifier>linux-x86_64</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-io_uring</artifactId>
          <classifier>linux-x86_64</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>linux-amd64</id>
      <activation>
        <os>
          <family>linux</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-epoll</artifactId>
          <classifier>linux-x86_64</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-io_uring</artifactId>
          <classifier>linux-x86_64</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>linux-aarch64</id>
      <activation>
        <os>
          <family>linux</family>
          <arch>aarch64</arch>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-epoll</artifactId>
          <classifier>linux-aarch_64</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-io_uring</artifactId>
          <classifier>linux-aarch_64</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>osx-x86_64</id>
      <activation>
        <os>
          <family>mac</family>
          <arch>x86_64</arch>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-resolver-dns-native-macos</artifactId>
          <classifier>osx-x86_64</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-kqueue</artifactId>
          <classifier>osx-x86_64</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>osx-aarch64</id>
      <activation>
        <os>
          <family>mac</family>
          <arch>aarch64</arch>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-resolver-dns-native-macos</artifactId>
          <classifier>osx-aarch_64</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-kqueue</artifactId>
          <classifier>osx-aarch_64</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

  </profiles>

</project>
